#pragma once


#define WIID_PC_TRADE_RESULT_TOP				(WIID_PC_TRADE_RESULT	+	1)		//스킨 TOP
#define WIID_PC_TRADE_RESULT_CENTER				(WIID_PC_TRADE_RESULT	+	2)		//스킨 CENTER
#define WIID_PC_TRADE_RESULT_BOTTOM				(WIID_PC_TRADE_RESULT	+	3)		//스킨 BOTTOM

#define WIID_PC_TRADE_RESULT_ARROW1				(WIID_PC_TRADE_RESULT	+	5)		//화살 Image
#define WIID_PC_TRADE_RESULT_ARROW2				(WIID_PC_TRADE_RESULT	+	6)		//화살 Image

#define WIID_PC_TRADE_RESULT_WARNING			(WIID_PC_TRADE_RESULT	+	7)		//경고문

#define WIID_PC_TRADE_RESULT_OK					(WIID_PC_TRADE_RESULT	+	10)		//예
#define WIID_PC_TRADE_RESULT_CANCEL				(WIID_PC_TRADE_RESULT	+	11)		//아니오

#define WIID_PC_TRADE_RESULT_PC_NAME			(WIID_PC_TRADE_RESULT	+	20)		//거래 상대의 캐릭터명
#define WIID_PC_TRADE_RESULT_PC_TRADE_IMAGE		(WIID_PC_TRADE_RESULT	+	21)		//거래 상대 캐릭명 앞에 나오는 돈 이미지

#define WIID_PC_TRADE_RESULT_PC_ELY_BACK		(WIID_PC_TRADE_RESULT	+	30)		//거래 상대의 ELY 배경
#define WIID_PC_TRADE_RESULT_PC_ELY				(WIID_PC_TRADE_RESULT	+	31)		//거래 상대의 ELY 표시
#define WIID_PC_TRADE_RESULT_PC_ELY_IMAGE		(WIID_PC_TRADE_RESULT	+	32)		//거래 상대의 Ely Image 표시

#define WIID_PC_TRADE_RESULT_PC_CASH_BACK		(WIID_PC_TRADE_RESULT	+	40)		//거래 상대의 CASH 배경
#define WIID_PC_TRADE_RESULT_PC_CASH			(WIID_PC_TRADE_RESULT	+	41)		//거래 상대의 CASH 표시
#define WIID_PC_TRADE_RESULT_PC_CASH_IMAGE		(WIID_PC_TRADE_RESULT	+	42)		//거래 상대의 CASH Image 표시

#define WIID_PC_TRADE_RESULT_PC_POINT_BACK		(WIID_PC_TRADE_RESULT	+	50)		//거래 상대의 POINT 배경
#define WIID_PC_TRADE_RESULT_PC_POINT			(WIID_PC_TRADE_RESULT	+	51)		//거래 상대의 POINT 표시
#define WIID_PC_TRADE_RESULT_PC_POINT_IMAGE		(WIID_PC_TRADE_RESULT	+	52)		//거래 상대의 POINT Image 표시

#define WIID_PC_TRADE_RESULT_PC_FEE_TEXT		(WIID_PC_TRADE_RESULT	+	60)		//수수료 문자
#define WIID_PC_TRADE_RESULT_PC_FEE_BACK		(WIID_PC_TRADE_RESULT	+	61)		//수수료 배경
#define WIID_PC_TRADE_RESULT_PC_FEE				(WIID_PC_TRADE_RESULT	+	62)		//수수료
#define WIID_PC_TRADE_RESULT_PC_FEE_IMAGE		(WIID_PC_TRADE_RESULT	+	63)		//수수료 이미지

#define WIID_PC_TRADE_RESULT_NAME				(WIID_PC_TRADE_RESULT	+	100)	//내 캐릭터명
#define WIID_PC_TRADE_RESULT_TRADE_IMAGE		(WIID_PC_TRADE_RESULT	+	105)	//내 캐릭터명 앞에 나오는 돈 이미지

#define WIID_PC_TRADE_RESULT_ELY_BACK			(WIID_PC_TRADE_RESULT	+	110)	//내 Ely 배경
#define WIID_PC_TRADE_RESULT_ELY				(WIID_PC_TRADE_RESULT	+	111)	//내 Ely 표시
#define WIID_PC_TRADE_RESULT_ELY_IMAGE			(WIID_PC_TRADE_RESULT	+	112)	//내 Ely Image 표시

#define WIID_PC_TRADE_RESULT_CASH_BACK			(WIID_PC_TRADE_RESULT	+	120)	//내 CASH 배경
#define WIID_PC_TRADE_RESULT_CASH				(WIID_PC_TRADE_RESULT	+	121)	//내 CASH
#define WIID_PC_TRADE_RESULT_CASH_IMAGE			(WIID_PC_TRADE_RESULT	+	122)	//내 CASH Image 표시

#define WIID_PC_TRADE_RESULT_POINT_BACK			(WIID_PC_TRADE_RESULT	+	130)	//내 POINT 배경
#define WIID_PC_TRADE_RESULT_POINT				(WIID_PC_TRADE_RESULT	+	131)	//내 POINT
#define WIID_PC_TRADE_RESULT_POINT_IMAGE		(WIID_PC_TRADE_RESULT	+	132)	//내 POINT Image 표시

#define WIID_PC_TRADE_RESULT_FEE_TEXT			(WIID_PC_TRADE_RESULT	+	140)		//수수료 문자
#define WIID_PC_TRADE_RESULT_FEE_BACK			(WIID_PC_TRADE_RESULT	+	141)		//수수료 배경
#define WIID_PC_TRADE_RESULT_FEE				(WIID_PC_TRADE_RESULT	+	142)		//수수료
#define WIID_PC_TRADE_RESULT_FEE_IMAGE			(WIID_PC_TRADE_RESULT	+	143)		//수수료 이미지

#define WIID_PC_TRADE_RESULT_PC_ITEM_BTN		(WIID_PC_TRADE_RESULT	+	200)	//거래 상대 Item Button
#define WIID_PC_TRADE_RESULT_PC_ITEM_ICONLINE   (WIID_PC_TRADE_RESULT	+	210)	//거래 상대 Item Icon Line
#define WIID_PC_TRADE_RESULT_PC_ITEM_ICON		(WIID_PC_TRADE_RESULT	+	220)	//거래 상대 Item Icon 
#define WIID_PC_TRADE_RESULT_PC_ITEM_NAME		(WIID_PC_TRADE_RESULT	+	230)	//거래 상대 Item Name

#define WIID_PC_TRADE_RESULT_ITEM_BTN			(WIID_PC_TRADE_RESULT	+	300)	//내 Item Button
#define WIID_PC_TRADE_RESULT_ITEM_ICONLINE		(WIID_PC_TRADE_RESULT	+	310)	//내 Item Icon Line
#define WIID_PC_TRADE_RESULT_ITEM_ICON			(WIID_PC_TRADE_RESULT	+	320)	//내 Item Icon 
#define WIID_PC_TRADE_RESULT_ITEM_NAME			(WIID_PC_TRADE_RESULT	+	330)	//내 Item Name

class SPWindow;
class SPWindowButton;


class SPWindowPcTradeResult : public SPWindow {

public:
	SPWindowPcTradeResult( INSTANCE_ID InstanceID, int iX, int iY, int iCX, int iCY, SPWindow* pParent = NULL);	
	virtual ~SPWindowPcTradeResult();

	virtual void Init();
	virtual void Clean();

	virtual void Process(float fTime);
	virtual void Render(float fTime);

	virtual void Show(bool bWithChild = true);
	virtual void Hide();

protected:
	/**
	 *
	 @param 
	 @return  
	*/
	void SetWindowBase();

	/**
	 * 내부 컨트롤 생성 <br>
	 @param
	 @return
	*/
	void InitSubControl();

	/**
	*
	@param 
	@return  
	*/
	void ArrangeControl();
	
	/**
	 * 내부 컨트롤의 데이터 초기화 <br>
	 @param
	 @return
	*/
	void ClearControl();
	
	/**
	 * 내부 컨트롤 데이터를 업데이트 <br>
	 @param
	 @return
	*/
	bool UpdateControl();

	/**
	 * 내 거래 아이템을 설정 <br>
	 @param
	 @return
	*/
	bool SetUserItem(int iIndex);

	/**
	 * 상대 거래 아이템을 설정 <br>
	 @param
	 @return
	*/
	bool SetPcItem(int iIndex);

	// {{ Message Map	
	SPIMESSAGE_OBJ_MAP_DECLARE()
	int OnOk				(WPARAM wParam, LPARAM lparam);
	int OnCancel			(WPARAM wParam, LPARAM lparam);

	int OnToolTipMove			(unsigned int iUiID, WPARAM wParam, LPARAM lParam);
	int OnToolTipEnter			(unsigned int iUiID, WPARAM wParam, LPARAM lParam);
	int OnToolTipOut			(unsigned int iUiID, WPARAM wParam, LPARAM lParam);

	int OnPCToolTipMove			(unsigned int iUiID, WPARAM wParam, LPARAM lParam);
	int OnPCToolTipEnter		(unsigned int iUiID, WPARAM wParam, LPARAM lParam);
	int OnPCToolTipOut			(unsigned int iUiID, WPARAM wParam, LPARAM lParam);

private:
	SPTexture* m_pBaseSkin;									/**< <br> */
	RECT m_rtBaseSrc[WINDOW_BASE_MAX];						/**< <br> */
	RECT m_rtBaseDest[WINDOW_BASE_MAX];						/**< <br> */
	
	SPWindowButton* m_pAccept;
	SPWindowButton* m_pCancel;
	
	SPWindow*	m_pPcItemIcon[MAX_PC_TRADE_COUNT];
	SPWindow*	m_pPcItemName[MAX_PC_TRADE_COUNT];
	SPWindow*	m_pPcName;
	SPWindow*	m_pPcEly;
	SPWindow*	m_pPcCash;
	SPWindow*	m_pPcPoint;
	SPWindow*	m_pPcFee;

	SPWindow*	m_pItemIcon[MAX_PC_TRADE_COUNT];
	SPWindow*	m_pItemName[MAX_PC_TRADE_COUNT];
	SPWindow*	m_pEly;
	SPWindow*	m_pCash;
	SPWindow*	m_pPoint;
	SPWindow*	m_pFee;

	bool		m_bItemAble[MAX_PC_TRADE_COUNT];			/**< 내가 올려논 아이템이 내가 착용가능한 아이템인지 <br> */
	bool		m_bPcItemAble[MAX_PC_TRADE_COUNT];			/**< 상대방이 올려논 아이템이 내가 착용가능한 아이템인지 <br> */	

	SPTexture*	m_pDisable;									/**< 비활성 표현용 <br> */
	RECT		m_rtSrcDisable;								/**< 비활성 표현용 소스 <br> */

	ICON_MARK	m_iItemMark[MAX_PC_TRADE_COUNT];			/**< ICON MARK <br> */
	ICON_MARK	m_iPcItemMark[MAX_PC_TRADE_COUNT];			/**< 상대방 ICON MARK <br> */

	RECT		m_rtMarkSrc[4];								/**< ICON MARK Src <br> */

	int			m_iStack[MAX_PC_TRADE_COUNT];				/**< 로컬 플레이어용 스택 <br> */
	RECT		m_rtStack[MAX_PC_TRADE_COUNT];				/**< 스택표현시 참고 영역 Icon 영역과 동일 <br> */

	int			m_iPcStack[MAX_PC_TRADE_COUNT];				/**< 상대방 플레이어용 스택 <br> */
	RECT		m_rtPcStack[MAX_PC_TRADE_COUNT];			/**< 스택표현시 참고 영역 Icon 영역과 동일 <br> */	

	std::string m_strPcInfo;								/**< 캐릭명의 거래아이템 문자열 <br> */
	
	float		m_fWaitDeley;								/**< 리플래쉬 요청 버튼 비활성 시간 <br> */
	float		m_fWaitAccumulate;							/**< 리플래쉬 요청 시간 갱신용 <br> */
};

